% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/poly-search-stop-search.R
\name{ukp_stop_search}
\alias{ukp_stop_search}
\alias{ukc_stop_search_poly}
\title{Find stop and search in custom area}
\usage{
ukc_stop_search_poly(poly_df, date = NULL, ...)
}
\arguments{
\item{poly_df}{dataframe containing the lat/lng pairs which define the
boundary of the custom area. If a custom area contains more than 10,000
crimes, the API will return a 503 status code. ukp_crime_poly converts the
dataframe into lat/lng pairs, separated by colons:
\code{lat},\code{lng}:\code{lat},\code{lng}:\code{lat},\code{lng}. The first and last coordinates need
not be the same â€” they will be joined by a straight line once the request
is made.}

\item{date, }{Optional. (YYY-MM), limit results to a specific month. The
latest month will be shown by default. e.g. date = "2013-01"}

\item{...}{further arguments passed to or from other methods. For example,
verbose option can be added with
\code{ukp_api("call", config = httr::verbose())}. See more in \code{?httr::GET}
documentation
(\url{https://cran.r-project.org/web/packages/httr/}) and
(\url{https://cran.r-project.org/web/packages/httr/vignettes/quickstart.html}).}
}
\description{
Returns details on stops and searches within a custom area. The stop and
searches returned in the API, like the crimes, are only an approximation
of where the actual stop and searches occurred, they are not the exact
locations.
}
\note{
The API will return a 400 status code in response to a GET request
longer than 4094 characters. For submitting particularly complex poly
parameters, consider using POST instead.
}
\examples{

# with 3 points
poly_df_3 = data.frame(lat = c(52.268, 52.794, 52.130),
                       long = c(0.543, 0.238, 0.478))

ukp_data_poly_3 <- ukp_stop_search_poly(poly_df_3)
head(ukp_data_poly_3)

# with 4 points
poly_df_4 = data.frame(lat = c(52.268, 52.794, 52.130, 52.000),
                       long = c(0.543,  0.238,  0.478,  0.400))
ukp_data_poly_4 <- ukp_stop_search_poly(poly_df = poly_df_4)

head(ukp_data_poly_4)

}
