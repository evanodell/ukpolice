% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stop-search-location.R
\name{ukc_stop_search_loc}
\alias{ukc_stop_search_loc}
\alias{ukc_stop_search_coord}
\alias{ukc_stop_search_poly}
\alias{ukc_stop_search_location}
\title{Stop and search}
\usage{
ukc_stop_search_loc(location, date = NULL, ...)

ukc_stop_search_coord(lat, lng, date = NULL, ...)

ukc_stop_search_poly(poly_df, date = NULL, ...)

ukc_stop_search_location(lat, lng, location, date = NULL)
}
\arguments{
\item{location}{If specified, \code{lat} and \code{lng} are ignored. Location IDs are
available through other methods including \code{\link[=ukc_street_crime]{ukc_street_crime()}}.}

\item{date, }{Optional. (YYYY-MM), limit results to a specific month. The
latest month will be shown by default. e.g. date = "2013-01"}

\item{...}{further arguments passed to or from other methods. For example,
verbose option can be added with
\code{ukc_api("call", config = httr::verbose())}. See more in \code{?httr::GET}
documentation
(\url{https://cran.r-project.org/web/packages/httr/}) and
(\url{https://cran.r-project.org/web/packages/httr/vignettes/quickstart.html}).}

\item{lat}{Latitude. Accepts a single value or a vector of values to create
a custom polygon.}

\item{lng}{Longitude. Accepts a single value or a vector of values to create
a custom polygon.}

\item{poly_df}{dataframe containing the lat/lng pairs which define the
boundary of the custom area. If a custom area contains more than 10,000
crimes, the API will return a 503 status code. ukc_crime_poly converts the
dataframe into lat/lng pairs, separated by colons:
\code{lat},\code{lng}:\code{lat},\code{lng}:\code{lat},\code{lng}. The first and last coordinates need
not be the same â€” they will be joined by a straight line once the request
is made.}
}
\value{
A \code{tibble} with details of stop and searches outcomes.
}
\description{
Returns details on stops and searches at a given location. The stop and
searches returned in the API, like the crimes, are only an approximation
of where the actual stop and searches occurred, they are not the exact
locations.

Returns details on stops and searches within a custom area. The stop and
searches returned in the API, like the crimes, are only an approximation
of where the actual stop and searches occurred, they are not the exact
locations.
}
\details{
Functions accept one of \code{lat} and \code{lng} pairs, \code{location} IDs or
a dataframe containing lat/lng pairs defining the boundary of a custom area.

If specified, \code{lat} and \code{lng} must be the same length. If only one
set of coordinates are given, all recorded stop and searches within a one
mile radius are returned. If multiple pairs, all recorded stop and searches
within a custom drawn polygon will be returned.
}
\note{
The API will return a 400 status code in response to a GET request
longer than 4094 characters. For submitting particularly complex poly
parameters, consider using POST instead.
}
\examples{
\donttest{
ukc_stop_search1 <- ukc_stop_search_loc(lat = 52.629729, lng = -1.131592)

ukc_stop_search2 <- ukc_stop_search_loc(
  lat = c(52.268, 53.194, 52.130),
  lng = c(0.543, 0.238, 0.478)
)
}


# with 3 points
poly_df_3 <- data.frame(
  lat = c(52.268, 52.794, 52.130),
  long = c(0.543, 0.238, 0.478)
)

ukc_data_poly_3 <- ukc_stop_search_poly(poly_df_3)
head(ukc_data_poly_3)

# with 4 points
poly_df_4 <- data.frame(
  lat = c(52.268, 52.794, 52.130, 52.000),
  long = c(0.543, 0.238, 0.478, 0.400)
)
ukc_data_poly_4 <- ukc_stop_search_poly(poly_df = poly_df_4)

head(ukc_data_poly_4)
}
\seealso{
\code{\link[=ukc_stop_search_force]{ukc_stop_search_force()}}

\code{\link[=ukc_stop_search_no_location]{ukc_stop_search_no_location()}}
}
